-150L))
opportunity
# Tabulate the data
opportunity %>%
count(decision, group)
# Tabulate the data
opportunity %>%
count(decision, group)
# Find the proportion who bought the DVD in each group
opportunity %>%
group_by(group) %>%
summarize(buy_prop = mean(decision == "buyDVD"))
# Plot group, filled by decision
ggplot(opportunity, aes(x = group, fill = decision)) +
# Add a bar layer, with position "fill"
geom_bar(position = "fill")
# Plot group, filled by decision
ggplot(opportunity, aes(x = group, fill = decision)) +
# Add a bar layer, with position "fill"
geom_bar(position = "fill") +
ggtitle("oportunit cost")
# Plot group, filled by decision
ggplot(opportunity, aes(x = group, fill = decision)) +
# Add a bar layer, with position "fill"
geom_bar(position = "fill") +
ggtitle("oportunity cost")
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
summarize(stat = "dif") %>%
pull()
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
summarize(stat = "dif") %>%
pull()
diff_obs
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
summarize(stat = "diff") %>%
pull()
diff_obs
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
diff() %>%
pull()
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD"))
opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD"))
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
diff(prop_buy) %>%
pull()
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
diff(stat = diff(prop_buy
)) %>%
pull()
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
diff(stat = diff(prop_buy)) %>%
pull()
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
diff(stat = diff(prop_buy)) %>%
pull()
# Calculate the observed difference in purchase rate
diff_obs <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
summarize(stat = diff(prop_buy)) %>%
pull()
diff_obs
# Create data frame of permuted differences in purchase rates
opp_perm <- opportunity %>%
# Specify decision vs. group, where success is buying a DVD
specify(decision ~ group, success = "nobuyDVD") %>%
# Set the null hypothesis to independence
hypothesize(null = "independence") %>%
# Generate 1000 reps of type permute
generate(reps = 1000, type = "permute") %>%
# Calculate the summary stat difference in proportions
summary(stat = "diff in props", order = c("treatment", "control"))
# Review the result
opp_perm
# Create data frame of permuted differences in purchase rates
opp_perm <- opportunity %>%
# Specify decision vs. group, where success is buying a DVD
specify(decision ~ group, success = "buyDVD") %>%
# Set the null hypothesis to independence
hypothesize(null = "independence") %>%
# Generate 1000 reps of type permute
generate(reps = 1000, type = "permute") %>%
# Calculate the summary stat difference in proportions
summary(stat = "diff in props", order = c("treatment", "control"))
# Review the result
opp_perm
# Create data frame of permuted differences in purchase rates
opp_perm <- opportunity %>%
# Specify decision vs. group, where success is buying a DVD
specify(decision ~ group, success = "buyDVD") %>%
# Set the null hypothesis to independence
hypothesize(null = "independence") %>%
# Generate 1000 reps of type permute
generate(reps = 1000, type = "permute") %>%
# Calculate the summary stat difference in proportions
calculate(stat = "diff in props", order = c("treatment", "control"))
# Review the result
opp_perm
# Using the permuation data, plot stat
ggplot(opp_perm, aes(x = stat)) +
# Add a histogram layer with binwidth 0.005
geom_histogram(binwidth = 0.005) +
# Add a vline layer with intercept diff_obs
geom_vline(aes(xintercept = diff_obs), color = "red")
# Using the permuation data, plot stat
ggplot(opp_perm, aes(x = stat)) +
geom_histogram(binwidth = 0.005) +
geom_vline(aes(xintercept = diff_obs), color = "red") +
ggtitle("Randomized distribution of difference in proportions")
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_obs, direction = "greater")
# Calculate the p-value using `get_p_value`
opp_perm %>%
___(___, ___)
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_obs, direction = "greater")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_obs, direction = "less")
opp_perm
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat>=diff_obs))
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_obs, direction = "greater")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_obs, direction = "less")
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat>=diff_obs))
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat<=diff_obs))
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_obs, direction = "greater")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_obs, direction = "less")
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat<=diff_obs))
# Calculate the observed difference in purchase rate
diff_orig <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
summarize(stat = diff(prop_buy)) %>%
pull()
diff_obs
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_orig, direction = "greater")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat<=diff_orig))
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat<=diff_orig))
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat <= diff_orig))
# Using the permuation data, plot stat
ggplot(opp_perm, aes(x = stat)) +
geom_histogram(binwidth = 0.005) +
geom_vline(aes(xintercept = diff_orig), color = "red") +
ggtitle("Randomized distribution of difference in proportions")
# Load packages
library(ggplot2)
library(tidyverse)
library(infer)
opportunity <- structure(list(decision = structure(c(1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L
), .Label = c("buyDVD", "nobuyDVD"), class = "factor"), group = structure(c(1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L), .Label = c("control", "treatment"), class = "factor")), class = "data.frame", row.names = c(NA,
-150L))
opportunity
# Tabulate the data
opportunity %>%
count(decision, group)
# Find the proportion who bought the DVD in each group
opportunity %>%
group_by(group) %>%
summarize(buy_prop = mean(decision == "buyDVD"))
# Plot group, filled by decision
ggplot(opportunity, aes(x = group, fill = decision)) +
# Add a bar layer, with position "fill"
geom_bar(position = "fill") +
ggtitle("oportunity cost")
# Calculate the observed difference in purchase rate
diff_orig <- opportunity %>%
# Group by group
group_by(group) %>%
# Calculate proportion deciding to buy a DVD
summarize(prop_buy = mean(decision == "buyDVD")) %>%
# Calculate difference between groups
summarize(stat = diff(prop_buy)) %>%
pull()
diff_orig
# Create data frame of permuted differences in purchase rates
opp_perm <- opportunity %>%
# Specify decision vs. group, where success is buying a DVD
specify(decision ~ group, success = "buyDVD") %>%
# Set the null hypothesis to independence
hypothesize(null = "independence") %>%
# Generate 1000 reps of type permute
generate(reps = 1000, type = "permute") %>%
# Calculate the summary stat difference in proportions
calculate(stat = "diff in props", order = c("treatment", "control"))
# Review the result
opp_perm
# Using the permuation data, plot stat
ggplot(opp_perm, aes(x = stat)) +
geom_histogram(binwidth = 0.005) +
geom_vline(aes(xintercept = diff_orig), color = "red") +
ggtitle("Randomized distribution of difference in proportions")
# Visualize the statistic
opp_perm %>%
visualize(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `get_p_value`
opp_perm %>%
get_p_value(obs_stat = diff_orig, direction = "less")
# Calculate the p-value using `summarize`
opp_perm %>%
summarize(p_value = mean(stat <= diff_orig))
# Load packages
library(ggplot2)
library(tidyverse)
library(infer)
# Load datasets
disc_big = readRDS("./datasets/disc_big.rds")
disc_small = readRDS("./datasets/disc_small.rds")
disc_new = readRDS("./datasets/disc_new.rds")
disc <- data.frame(promote = c(rep("promoted", 35),
rep("not_promoted", 13)),
sex = c(rep("male", 21), rep("female", 14),
rep("male", 3), rep("female", 10)))
disc
summary(disc)
# Create a contingency table summarizing the data
disc %>%
# Count the rows by sex, promote
count(sex, promote)
# Find proportion of each sex who were promoted
disc %>%
# Group by sex
group_by(sex) %>%
# Calculate proportion promoted summary stat
summarize(promoted_prop = mean(promote == "promoted"))
# Replicate the entire data frame, permuting the promote variable
disc_perm <- disc %>%
specify(promote ~ sex, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 5, type = "permute")
disc_perm
disc_perm %>%
# Group by replicate
group_by(replicate) %>%
# Count per group
count()
disc_perm %>%
# Calculate difference in proportion, male then female
calculate(stat = "diff in props", order = c("male", "female"))
# Calculate the observed difference in promotion rate
diff_orig <- disc %>%
group_by(sex) %>%
summarize(prop_prom = mean(promote == "promoted")) %>%
summarize(stat = diff(prop_prom)) %>%
pull()
diff_orig
disc_perm <- disc %>%
specify(promote ~ sex, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
disc_perm
# From previous steps
diff_orig <- disc %>%
group_by(sex) %>%
summarize(prop_prom = mean(promote == "promoted")) %>%
summarize(stat = diff(prop_prom)) %>%
pull()
disc_perm <- disc %>%
specify(promote ~ sex, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
ggplot(disc_perm, aes(x = stat)) +
geom_histogram(binwidth = 0.01) +
geom_vline(aes(xintercept = diff_orig), color = "red") +
ggtitle("Randomization distribution of null distribution")
disc_perm %>%
summarize(
q.90 = quantile(stat, p = 0.9),
q.95 = quantile(stat, p = 0.95),
q.99 = quantile(stat, p = 0.99)
) -> disc_perm_quantiles
disc_perm_quantiles
ggplot(disc_perm, aes(x = stat)) +
geom_histogram(binwidth = 0.01) +
geom_vline(aes(xintercept = diff_orig), color = "red", size = 2) +
geom_vline(aes(xintercept = disc_perm_quantiles$q.90, color = "Q90")) +
geom_vline(aes(xintercept = disc_perm_quantiles$q.95, color = "Q95")) +
geom_vline(aes(xintercept = disc_perm_quantiles$q.99, color = "Q99")) +
ggtitle("Randomization distribution of null distribution")
# Use disc_perm
disc_perm %>%
summarize(
q.01 = quantile(stat, p = 0.01),
q.05 = quantile(stat, p = 0.05),
q.10 = quantile(stat, p = 0.1)
)
disc_small %>%
count(sex, promote)
disc_big %>%
count(sex, promote)
#small
disc_perm_small <- disc_small %>%
specify(promote ~ sex, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
diff_orig_small <- disc_small %>%
group_by(sex) %>%
summarize(prop_prom = mean(promote == "promoted")) %>%
summarize(stat = diff(prop_prom)) %>%
pull()
#big
disc_perm_big <- disc_big %>%
specify(promote ~ sex, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
diff_orig_big <- disc_big %>%
group_by(sex) %>%
summarize(prop_prom = mean(promote == "promoted")) %>%
summarize(stat = diff(prop_prom)) %>%
pull()
# Using disc_perm_small, plot stat
ggplot(disc_perm_small, aes(x = stat)) +
# Add a histogram layer with binwidth 0.01
geom_histogram(binwidth = 0.01) +
# Add a vline layer, crossing x-axis at diff_orig_small
geom_vline(aes(xintercept = diff_orig_small), color = "red") +
ggtitle("Randomization distribution of null distribution [small]")
ggplot(disc_perm_big, aes(x = stat)) +
# Add a histogram layer with binwidth 0.01
geom_histogram(binwidth = 0.01) +
# Add a vline layer, crossing x-axis at diff_orig_small
geom_vline(aes(xintercept = diff_orig_big), color = "red") +
ggtitle("Randomization distribution of null distribution [big]")
calc_upper_quantiles <- function(dataset) {
dataset %>%
summarize(
q.90 = quantile(stat, p = 0.90),
q.95 = quantile(stat, p = 0.95),
q.99 = quantile(stat, p = 0.99)
)
}
# Recall the quantiles associated with the original dataset
calc_upper_quantiles(disc_perm)
# Calculate the quantiles associated with the small dataset
calc_upper_quantiles(disc_perm_small)
# Calculate the quantiles associated with the big dataset
calc_upper_quantiles(disc_perm_big)
# Visualize and calculate the p-value for the original dataset
disc_perm %>%
visualize(obs_stat = diff_orig, direction = "greater")
disc_perm %>%
get_p_value(obs_stat = diff_orig, direction = "greater")
# Visualize and calculate the p-value for the small dataset
disc_perm_small %>%
visualize(obs_stat = diff_orig_small, direction = "greater")
disc_perm_small %>%
get_p_value(obs_stat = diff_orig_small, direction = "greater")
# Visualize and calculate the p-value for the big dataset
disc_perm_big %>%
visualize(obs_stat = diff_orig_big, direction = "greater")
disc_perm_big %>%
get_p_value(obs_stat = diff_orig_big, direction = "greater")
disc %>%
count(sex, promote)
disc_new %>%
count(sex, promote)
disc_perm_new <- disc_new %>%
specify(promote ~ sex, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
diff_orig_new <- disc_new %>%
group_by(sex) %>%
summarize(prop_prom = mean(promote == "promoted")) %>%
summarize(stat = diff(prop_prom)) %>%
pull()
disc_perm_new
diff_orig_new
# Recall the distribution of the original permuted differences
ggplot(disc_perm, aes(x = stat)) +
geom_histogram() +
geom_vline(aes(xintercept = diff_orig), color = "red") +
ggtitle("Randomization distribution of null distribution [dis_perm]")
# Plot the distribution of the new permuted differences
ggplot(disc_perm_new, aes(x = stat)) +
geom_histogram() +
geom_vline(aes(xintercept = diff_orig_new), color = "red") +
ggtitle("Randomization distribution of null distribution [dis_perm_new]")
# Recall the p-value from the original data
disc_perm %>%
summarize(p_value = mean(diff_orig <= stat))
# Find the p-value from the new data
disc_perm_new %>%
summarize(p_value = mean(stat >= diff_orig_new))
# Calculate the two-sided p-value
disc_perm %>%
summarize(p_value = 2 * mean(diff_orig <= stat))
